{"version":3,"sources":["actions/pokeActions.js","components/PokemonInfo.jsx","services/pokemonApi.js","images/loading.gif","components/Loading.jsx","pages/Home.jsx","store/storage.js","pages/BattlePreparation.jsx","components/PokemonInfoBattle.jsx","pages/BattleCamp.jsx","App.js","reportWebVitals.js","reducers/pokeReducer.js","reducers/index.js","store/index.js","index.js"],"names":["GET_POKEMONS_SUCESS","GET_POKEMONS_ERROR","SELECT_POKEMON","FILTER_POKEMONS","SET_OPONENT","PokemonInfo","props","pokemon","name","className","toUpperCase","slice","toLowerCase","id","src","sprites","other","dream_world","front_default","alt","base_experience","weight","stats","map","stat","base_stat","getAllPokemons","a","fetch","fetchPokemons","json","getPokemons","results","pokemonsInfo","url","pokemons","Promise","all","info","fetchInfo","allData","push","Loading","image","connect","pokeReducer","isLoading","selectedPokemon","allPokemonsArr","isSelected","dispatch","payload","type","getPokemonsSucess","apiError","getPokemonsError","select","error","useState","pokemonsOffset","setPokemonsOfSet","pokemonsInScreen","setPokemonsInScreen","redirect","setRedirect","POKEMONS_ARR_LENGTH","length","LIMIT_POKEMONS_SCREEN","console","log","selectCurrPokemon","event","target","pokemonFound","find","useEffect","apiResult","sortResult","sort","b","load","to","localStorage","myPokemon","onClick","savedPokemon","key","JSON","parse","getItem","getItemFromLocalStorage","disabled","index","showingPokemons","htmlFor","value","DISPLAY","setOpnt","payload2","setOponent","pokemonSelected","useSelector","state","allPokemons","takedPokemon","setTakedPodemon","battleOk","setBattleOk","oponent","setOponentHere","oponentLvl","setOponentLvl","showOponent","setShowOponent","getRandomPokemon","lvl","document","getElementById","innerHTML","currPokemonBattle","Math","ceil","random","element","informationSave","setItem","stringify","classList","remove","setTimeout","add","style","backgroundColor","step","min","max","levelOponent","PokemonInfoBattle","level","thisOponent","setOponentStats","forEach","s","minAttack","maxAttack","myAttack","fontSize","textDecoration","margin","color","fontWeight","App","exact","path","component","Home","BattlePreparation","BattleCamp","marginTop","href","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.63899e58.chunk.js","sourcesContent":["export const GET_POKEMONS_SUCESS = 'GET_POKEMONS_SUCESS';\nexport const GET_POKEMONS_ERROR = 'GET_POKEMONS_ERROR';\nexport const SELECT_POKEMON = 'SELECT_POKEMON';\nexport const FILTER_POKEMONS = 'FILTER_POKEMONS';\nexport const SET_OPONENT = 'SET_OPONENT';\n\nexport const getPokemonsSucess = (payload) => ({\n  type: GET_POKEMONS_SUCESS,\n  payload,\n});\n\nexport const getPokemonsError = (payload) => ({\n  type: GET_POKEMONS_ERROR,\n  payload,\n});\n\nexport const selectPokemon = (payload) => ({\n  type: SELECT_POKEMON,\n  payload,\n});\n\nexport const filterPokemons = (payload) => ({\n  type: FILTER_POKEMONS,\n  payload,\n});\n\nexport const setOponent = (payload, payload2) => ({\n  type: SET_OPONENT,\n  payload,\n  payload2,\n});\n\n// export const getPokemonsThunk = () => async (dispatch) => {\n//   try {\n//     const pokemons = await getAllPokemons();\n//     dispatch(getPokemonsSucess(pokemons));\n//   } catch (error) {\n//     dispatch(getPokemonsError(error));\n//   }\n// };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/pokemonInfo.css';\n\nfunction PokemonInfo(props) {\n  const { pokemon } = props;\n  if (!pokemon.name) {\n    return (\n      <div>\n        Select an Pokemon to see more information about it...\n      </div>);\n  }\n  return (\n    <div className=\"pokemon-card\">\n      <div className=\"card-selected\">\n        <h1>{pokemon.name[0].toUpperCase() + pokemon.name.slice(1).toLowerCase()}</h1>\n        <img\n          id=\"selectedPokemon\"\n          src={ pokemon.sprites.other.dream_world.front_default }\n          alt={ pokemon.name }\n        />\n      </div>\n      <div className=\"card-selected-text\">\n        <p>{`Base experience: ${pokemon.base_experience} points`}</p>\n        <p>{`Weight: ${pokemon.weight}`}</p>\n        {pokemon.stats.map((stat) => (\n          <p key={ `${stat.name}${stat.stat.name}` }>\n            {`${stat.stat.name}: ${stat.base_stat} points`}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nPokemonInfo.propTypes = {\n  pokemon: PropTypes.object,\n}.isRequired;\n\nexport default PokemonInfo;\n","const getAllPokemons = async () => {\n  try {\n    const fetchPokemons = await fetch('https://pokeapi.co/api/v2/pokemon?limit=500');\n    const getPokemons = await fetchPokemons.json();\n    const { results } = getPokemons;\n    const pokemonsInfo = results.map((pokemon) => pokemon.url);\n    const pokemons = [];\n    await Promise.all(pokemonsInfo.map(async (info) => {\n      const fetchInfo = await fetch(`${info}`);\n      const allData = await fetchInfo.json();\n      pokemons.push(allData);\n    }));\n    return pokemons;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport default getAllPokemons;\n","export default __webpack_public_path__ + \"static/media/loading.e61d80e8.gif\";","import React from 'react';\nimport image from '../images/loading.gif';\n\nfunction Loading() {\n  return (\n    <div>\n      <h1>Loading Pokemons...</h1>\n      <img src={ image } alt=\"pikachu\" />\n    </div>\n  );\n}\n\nexport default Loading;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect /* useHistory */ } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getPokemonsError,\n  getPokemonsSucess, selectPokemon } from '../actions/pokeActions';\nimport PokemonInfo from '../components/PokemonInfo';\nimport getAllPokemons from '../services/pokemonApi';\nimport Loading from '../components/Loading';\nimport { getItemFromLocalStorage } from '../store/storage';\n// import FilterInput from '../components/FilterInput';\n\nconst POKEMONS_LENGTH = 10;\n\nfunction Home(props) {\n  const { apiError, getPokemons, allPokemonsArr,\n    error, select, isLoading, selectedPokemon, isSelected } = props;\n\n  const [pokemonsOffset, setPokemonsOfSet] = useState(0);\n  const [pokemonsInScreen, setPokemonsInScreen] = useState(POKEMONS_LENGTH);\n  const [redirect, setRedirect] = useState(false);\n\n  const POKEMONS_ARR_LENGTH = allPokemonsArr.length;\n  const LIMIT_POKEMONS_SCREEN = pokemonsInScreen === POKEMONS_ARR_LENGTH;\n  // const IS_SELECTEED = selectedPokemon.name;\n  console.log(isSelected);\n  const pokemons = [];\n  const showingPokemons = () => {\n    for (let index = pokemonsOffset; index < pokemonsInScreen; index += 1) {\n      pokemons.push(allPokemonsArr[index]);\n    }\n    return pokemons;\n  };\n\n  useEffect(() => {\n    const load = async () => {\n      try {\n        const apiResult = await getAllPokemons();\n        const sortResult = apiResult.sort((a, b) => a.id - b.id);\n        await getPokemons(sortResult);\n      } catch (err) {\n        apiError(err);\n      }\n    };\n    load();\n    /* if (localStorage.myPokemon) {\n      const savedPokemon = getItemFromLocalStorage('myPokemon');\n      select(savedPokemon);\n    } */\n  }, []);\n\n  function selectCurrPokemon(event) {\n    // const nextpageButton = document.getElementById('next-page');\n    // nextpageButton.classList.remove('display-off');\n    const { id } = event.target;\n    const pokemonFound = pokemons.find((pokemon) => pokemon.name === id);\n    if (selectedPokemon.name === id) return;\n    if (pokemonFound) select(pokemonFound);\n  }\n\n  const nextPokemons = () => {\n    setPokemonsOfSet(pokemonsOffset + POKEMONS_LENGTH);\n    setPokemonsInScreen(pokemonsInScreen + POKEMONS_LENGTH);\n  };\n\n  const previousPokemons = () => {\n    setPokemonsOfSet(pokemonsOffset - POKEMONS_LENGTH);\n    setPokemonsInScreen(pokemonsInScreen - POKEMONS_LENGTH);\n  };\n\n  const nextPage = () => {\n    setRedirect(true);\n  };\n\n  const recoverPokemon = () => {\n    const savedPokemon = getItemFromLocalStorage('myPokemon');\n    select(savedPokemon);\n  };\n\n  if (error) return <h2>{ error }</h2>;\n  if (isLoading) return <h2><Loading /></h2>;\n  if (redirect) return <Redirect to=\"/PokemonGame/BattlePreparation\" />;\n\n  return (\n    <div id=\"main\">\n      <h2>Welcome to Pokemon game!</h2>\n      <h3>\n        Here you will find a lot of information about each pokemon.\n        We have a list of 500 pokemons.\n      </h3>\n      <h2>To start select a pokemon...</h2>\n      {localStorage.myPokemon && !isSelected\n        ? (\n          <div id=\"recover-pokemon\">\n            <h2>Do you already have a pokemon that is in training want to keep it?</h2>\n            <button type=\"button\" onClick={ recoverPokemon }>Yes I want!</button>\n          </div>\n        )\n        : '' }\n      <div className=\"card\">\n        <PokemonInfo pokemon={ selectedPokemon } />\n      </div>\n      {/* <FilterInput /> error component */}\n      <button\n        type=\"button\"\n        disabled={ pokemonsOffset === 0 }\n        className=\"pokeButton\"\n        onClick={ previousPokemons }\n      >\n        See previous pokemons...\n      </button>\n      <button\n        type=\"button\"\n        disabled={ LIMIT_POKEMONS_SCREEN }\n        className=\"pokeButton\"\n        onClick={ nextPokemons }\n      >\n        See next pokemons...\n      </button>\n      <button\n        id=\"next-page\"\n        className={ !isSelected ? 'display-off' : '' }\n        onClick={ nextPage }\n        type=\"button\"\n      >\n        Prepare for battle...\n      </button>\n      <div className=\"pokemon-cards\">\n        { showingPokemons().map((pokemon) => (\n          <label key={ pokemon.name } htmlFor={ pokemon.name }>\n            <div className=\"pokeCard\">\n              <div id=\"card-text\">\n                <input\n                  className=\"input-radio pokeCard pokemons\"\n                  id={ pokemon.name }\n                  onClick={ selectCurrPokemon }\n                  name=\"selected\"\n                  type=\"radio\"\n                  value={ pokemon.name }\n                />\n                <h3>{`Click here to select ${pokemon.name}`}</h3>\n              </div>\n              <div id=\"card-image\">\n                <img\n                  src={ pokemon.sprites.front_default }\n                  alt={ pokemon.name }\n                />\n              </div>\n            </div>\n          </label>\n        )) }\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getPokemons: (payload) => dispatch(getPokemonsSucess(payload)),\n  apiError: (payload) => dispatch(getPokemonsError(payload)),\n  select: (pokemon) => dispatch(selectPokemon(pokemon)),\n});\n\nconst mapStateToProps = ({ pokeReducer:\n  { isLoading, selectedPokemon, allPokemonsArr, isSelected } }) => ({\n  isLoading,\n  selectedPokemon,\n  allPokemonsArr,\n  isSelected,\n});\n\nHome.propTypes = {\n  info: PropTypes.object,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","export const setToLocalStorage = (key, element) => localStorage\n  .setItem(key, JSON.stringify(element));\n\nexport const getItemFromLocalStorage = (key) => {\n  const localLenght = localStorage.length;\n  if (localLenght < 1) return;\n  return JSON.parse(localStorage.getItem(key));\n};\n","/* eslint-disable react/jsx-closing-tag-location */\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect, useSelector } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { setOponent } from '../actions/pokeActions';\nimport PokemonInfo from '../components/PokemonInfo';\nimport { setToLocalStorage } from '../store/storage';\n\nconst DISPLAY = 'display-off';\nconst POKEMON_LEVEL_3 = 3;\nconst MAX_LEVEL_OPONENT = 99;\n\nfunction BattlePreparation(props) {\n  const { setOpnt } = props;\n  // const pokemonSelected = useSelector((pokemonSelected) => pokemonSelected.pokemonSelected);\n  const pokemonSelected = useSelector((state) => state.pokeReducer.selectedPokemon);\n  const allPokemons = useSelector((state) => state.pokeReducer.allPokemonsArr);\n  const [takedPokemon, setTakedPodemon] = useState(false);\n  const [battleOk, setBattleOk] = useState(false);\n  const [oponent, setOponentHere] = useState({});\n  const [oponentLvl, setOponentLvl] = useState();\n  const [showOponent, setShowOponent] = useState(false);\n  const [redirect, setRedirect] = useState(false);\n\n  function getRandomPokemon(lvl) {\n    setOponentLvl(lvl);\n    document.getElementById('BPText')\n      .innerHTML = 'This is your oponent. Are you ready for the battle?';\n    // document.getElementById('level 1').classList.add('display-off');\n    // document.getElementById('level 2').classList.add('display-off');\n    // document.getElementById('level 3').classList.add('display-off');\n    const currPokemonBattle = allPokemons[Math.ceil(Math.random() * allPokemons.length)];\n    const oponentOk = currPokemonBattle;\n    setOponentHere(oponentOk);\n    setBattleOk(true);\n  }\n\n  function battle(opnt) {\n    setOpnt(opnt, oponentLvl);\n    setRedirect(true);\n  }\n\n  if (redirect) return <Redirect to=\"/PokemonGame/BattleCamp\" />;\n\n  return (\n    <>\n      <Link to=\"/PokemonGame\">Voltar</Link>\n      <div>\n        <h1>Battle Preparation</h1>\n      </div>\n      <div>\n        <h1>You selected:</h1>\n        <PokemonInfo pokemon={ pokemonSelected } />\n      </div>\n      <h2>want to keep this pokemon and store your information?</h2>\n      <h3 id=\"save-to-store\" className=\"display-off\">\n        Congratulations now this pokemon is yours, take good care of it.\n      </h3>\n      <button\n        type=\"button\"\n        onClick={ () => {\n          setTakedPodemon(true);\n          const THREE_SECONDS = 3000;\n          const informationSave = document.getElementById('save-to-store');\n          setToLocalStorage('myPokemon', pokemonSelected);\n          informationSave.classList.remove(DISPLAY);\n          setTimeout(() => {\n            informationSave.classList.add(DISPLAY);\n          }, THREE_SECONDS);\n        } }\n      >\n        Yes I want!\n      </button>\n      <h1 id=\"BPText\">Want to battle pokemons of which levels?</h1>\n      <div className=\"pokemon-cards\">\n        { battleOk\n          && <label htmlFor={ oponent.name }>\n            <div className=\"pokeCard\" style={ { backgroundColor: '#D2691E' } }>\n              <div id=\"card-text\">\n                <input\n                  id={ oponent.name }\n                  className=\"input-radio pokeCard pokemons\"\n                  onClick={ () => battle(oponent) }\n                  name=\"selected\"\n                  type=\"radio\"\n                  value={ oponent.name }\n                />\n                <h3>{`Click here to Battle with ${oponent.name} level ${oponentLvl}`}</h3>\n              </div>\n              <div id=\"card-image\">\n                <img\n                  src={ oponent.sprites.front_default }\n                  alt={ oponent.name }\n                />\n              </div>\n            </div>\n          </label>}\n        <div>\n          { showOponent && oponent.stats.map((stat) => (\n            <p key={ `${stat.name}${stat.stat.name}` }>\n              {`${stat.stat.name}: `}\n              <strong>\n                {`${stat.base_stat * oponentLvl} points`}\n              </strong>\n            </p>\n          ))}\n        </div>\n      </div>\n      <button\n        id=\"level 1\"\n        className={ !takedPokemon ? DISPLAY : '' }\n        onClick={ () => getRandomPokemon(1) }\n        type=\"button\"\n      >\n        Level 1\n      </button>\n      <button\n        id=\"level 2\"\n        className={ !takedPokemon ? DISPLAY : '' }\n        onClick={ () => getRandomPokemon(2) }\n        type=\"button\"\n      >\n        Level 2\n      </button>\n      <button\n        id=\"level 3\"\n        className={ !takedPokemon ? DISPLAY : '' }\n        onClick={ () => getRandomPokemon(POKEMON_LEVEL_3) }\n        type=\"button\"\n      >\n        Level 3\n      </button>\n      <button\n        id=\"checkOponent\"\n        className={ !takedPokemon ? DISPLAY : '' }\n        onClick={ () => setShowOponent(!showOponent) }\n        type=\"button\"\n      >\n        CheckOponent\n      </button>\n      <h4\n        className={ !takedPokemon ? DISPLAY : '' }\n      >\n        Set Oponent Level here (Max 99 if you can XD)\n      </h4>\n      <label\n        className={ !takedPokemon ? DISPLAY : '' }\n        htmlFor=\"oponentLvl\"\n      >\n        <input\n          id=\"oponentLvl\"\n          type=\"number\"\n          step=\"1\"\n          min=\"0\"\n          max=\"99\"\n        />\n      </label>\n      <button\n        id=\"oponentLevelButton\"\n        className={ !takedPokemon ? DISPLAY : '' }\n        onClick={ () => {\n          let levelOponent = document.getElementById('oponentLvl').value;\n          if (levelOponent > MAX_LEVEL_OPONENT) levelOponent = MAX_LEVEL_OPONENT;\n          getRandomPokemon(levelOponent);\n        } }\n        type=\"button\"\n      >\n        Set Oponent Level\n      </button>\n    </>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  setOpnt: (payload, payload2) => dispatch(setOponent(payload, payload2)),\n});\n\nBattlePreparation.propTypes = {\n  setOpnt: PropTypes.object,\n}.isRequired;\n\nexport default connect(null, mapDispatchToProps)(BattlePreparation);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/pokemonInfo.css';\n\nfunction PokemonInfoBattle(props) {\n  const { pokemon, level } = props;\n  if (!pokemon.name) {\n    return (\n      <div>\n        Select an Pokemon to see more information about it...\n      </div>);\n  }\n  return (\n    <div className=\"pokemon-card\">\n      <div className=\"card-selected\">\n        <h1>\n          {`${pokemon.name[0].toUpperCase()}${pokemon.name\n            .slice(1).toLowerCase()} ( level: ${level} )`}\n        </h1>\n        <img\n          id=\"selectedPokemon\"\n          src={ pokemon.sprites.other.dream_world.front_default }\n          alt={ pokemon.name }\n        />\n      </div>\n      <div className=\"card-selected-text\">\n        <p>{`Base experience: ${pokemon.base_experience * level} points`}</p>\n        <p>{`Weight: ${pokemon.weight}`}</p>\n        {pokemon.stats.map((stat) => (\n          <p key={ `${stat.name}${stat.stat.name}` }>\n            {`${stat.stat.name}: ${stat.base_stat} points`}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nPokemonInfoBattle.propTypes = {\n  pokemon: PropTypes.object,\n}.isRequired;\n\nexport default PokemonInfoBattle;\n","/* eslint-disable react/jsx-closing-tag-location */\nimport React, { useState, useEffect } from 'react';\n\nimport { connect, useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PokemonInfo from '../components/PokemonInfo';\nimport PokemonInfoBattle from '../components/PokemonInfoBattle';\n// import { setToLocalStorage } from '../store/storage';\n\nconst MIN_DMG_PERCENT = 0.1;\nconst MAX_DMG_PERCENT = 0.3;\n\nfunction BattleCamp() {\n  const oponent = useSelector((state) => state.pokeReducer.oponent.stats);\n  const level = useSelector((state) => state.pokeReducer.oponent.level);\n  const pokemonSelected = useSelector((state) => state.pokeReducer.selectedPokemon);\n\n  const [thisOponent, setOponentStats] = useState(oponent);\n  // const [attacks, setAttacks] = useState(0);\n  const [redirect, setRedirect] = useState(false);\n  // const [me, setMe] = useState(pokemonSelected);\n  // setOponentStats(oponent);\n\n  useEffect(() => {\n    setOponentStats({ ...thisOponent,\n      thisOponent: thisOponent.stats.forEach((s) => {\n        s.base_stat *= level;\n      }) });\n  }, []);\n\n  function attack() {\n    const minAttack = pokemonSelected.stats[1].base_stat * MIN_DMG_PERCENT;\n    const maxAttack = pokemonSelected.stats[1].base_stat * MAX_DMG_PERCENT;\n    const myAttack = Math.ceil(Math.random() * -(minAttack - maxAttack));\n\n    setOponentStats({ ...thisOponent,\n      thisOponent: thisOponent.stats[0].base_stat -= myAttack });\n    // const oponentHp = oponent.stats[0].base_stat;\n    // setOponentStats(thisOponent.stats[0].base_stat.concat(-myAttack));\n  }\n\n  useEffect(() => {\n    if (thisOponent.stats[0].base_stat < 1) {\n      setRedirect(true);\n    }\n  }, [thisOponent]);\n\n  return (\n    <div>\n      <Link to=\"/PokemonGame/BattlePreparation\">Back To BattlePreparation</Link>\n      <PokemonInfo pokemon={ pokemonSelected } />\n      {!redirect\n        ? <button type=\"button\" onClick={ attack }>Attack!</button>\n        : ''}\n      {!redirect\n        ? <PokemonInfoBattle pokemon={ thisOponent } level={ level } />\n        : <div>\n          <Link\n            style={ {\n              fontSize: '26px',\n              textDecoration: 'none',\n              margin: '6em',\n              color: 'black',\n              fontWeight: '700' } }\n            to=\"/PokemonGame/BattlePreparation\"\n          >\n            Congratulations you Win!\n            Click here to Back --BattlePreparation--\n          </Link>\n        </div>}\n    </div>\n  );\n}\n\n// const mapDispatchToProps = (dispatch) => ({\n//   getPokemons: (payload) => dispatch(getPokemonsSucess(payload)),\n\n// });\n\nexport default connect(null, null)(BattleCamp);\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './css/App.css';\nimport Home from './pages/Home';\nimport BattlePreparation from './pages/BattlePreparation';\nimport BattleCamp from './pages/BattleCamp';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/PokemonGame\" component={ Home } />\n            <Route\n              exact\n              path=\"/PokemonGame/BattlePreparation\"\n              component={ BattlePreparation }\n            />\n            <Route\n              exact\n              path=\"/PokemonGame/BattleCamp\"\n              component={ BattleCamp }\n            />\n          </Switch>\n        </BrowserRouter>\n        <h2 style={ { marginTop: '5%' } }>Created By Felipe Flores</h2>\n        <a href=\"https://github.com/FelipeFloresWeb/PokemonGame\">GitHub</a>\n        <p>Datas from: https://pokeapi.co/</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  GET_POKEMONS_SUCESS,\n  GET_POKEMONS_ERROR,\n  SELECT_POKEMON,\n  FILTER_POKEMONS,\n  SET_OPONENT,\n} from '../actions/pokeActions';\n\nconst INITIAL_STATE = {\n  error: null,\n  isLoading: true,\n  allPokemonsArr: [],\n  isSelected: false,\n  selectedPokemon: {},\n  oponent: {\n    stats: {},\n    level: '',\n  },\n};\n\nfunction pokeReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case GET_POKEMONS_SUCESS:\n    return { ...state, isLoading: false, allPokemonsArr: action.payload };\n  case GET_POKEMONS_ERROR:\n    return { ...state, error: action.payload };\n  case SELECT_POKEMON:\n    return { ...state, isSelected: true, selectedPokemon: action.payload };\n  case FILTER_POKEMONS:\n    return { ...state, allPokemonsArr: action.payload };\n  case SET_OPONENT:\n    return { ...state, oponent: { stats: action.payload, level: action.payload2 } };\n  default:\n    return state;\n  }\n}\n\nexport default pokeReducer;\n","import { combineReducers } from 'redux';\nimport pokeReducer from './pokeReducer';\n\nconst rootReducer = combineReducers({ pokeReducer });\n\nexport default rootReducer;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/index';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","/* eslint-disable */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}