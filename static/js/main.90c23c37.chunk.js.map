{"version":3,"sources":["actions/pokeActions.js","components/PokemonInfo.jsx","services/pokemonApi.js","images/loading.gif","components/Loading.jsx","store/storage.js","pages/Home.jsx","pages/BattlePreparation.jsx","App.js","reportWebVitals.js","reducers/pokeReducer.js","reducers/index.js","store/index.js","index.js"],"names":["GET_POKEMONS_SUCESS","GET_POKEMONS_ERROR","SELECT_POKEMON","PokemonInfo","props","pokemon","name","className","toUpperCase","slice","toLowerCase","id","src","sprites","other","dream_world","front_default","alt","base_experience","weight","stats","map","stat","base_stat","getAllPokemons","a","fetch","fetchPokemons","json","getPokemons","results","pokemonsInfo","url","pokemons","Promise","all","info","fetchInfo","allData","push","Loading","image","getItemFromLocalStorage","key","localStorage","length","JSON","parse","getItem","connect","pokeReducer","isLoading","selectedPokemon","allPokemonsArr","isSelected","dispatch","payload","type","getPokemonsSucess","apiError","getPokemonsError","select","error","useState","pokemonsOffset","setPokemonsOfSet","pokemonsInScreen","setPokemonsInScreen","redirect","setRedirect","POKEMONS_ARR_LENGTH","LIMIT_POKEMONS_SCREEN","selectCurrPokemon","event","target","pokemonFound","find","useEffect","apiResult","sortResult","sort","b","load","myPokemon","savedPokemon","to","onClick","disabled","display","index","showingPokemons","htmlFor","value","BattlePreparation","pokemonSelected","useSelector","state","element","informationSave","document","getElementById","setItem","stringify","classList","remove","setTimeout","add","App","exact","path","component","Home","href","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","INITIAL_STATE","action","rootReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.90c23c37.chunk.js","sourcesContent":["export const GET_POKEMONS_SUCESS = 'GET_POKEMONS_SUCESS';\nexport const GET_POKEMONS_ERROR = 'GET_POKEMONS_ERROR';\nexport const SELECT_POKEMON = 'SELECT_POKEMON';\n\nexport const getPokemonsSucess = (payload) => ({\n  type: GET_POKEMONS_SUCESS,\n  payload,\n});\n\nexport const getPokemonsError = (payload) => ({\n  type: GET_POKEMONS_ERROR,\n  payload,\n});\n\nexport const selectPokemon = (payload) => ({\n  type: SELECT_POKEMON,\n  payload,\n});\n\n// export const getPokemonsThunk = () => async (dispatch) => {\n//   try {\n//     const pokemons = await getAllPokemons();\n//     dispatch(getPokemonsSucess(pokemons));\n//   } catch (error) {\n//     dispatch(getPokemonsError(error));\n//   }\n// };\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport '../css/pokemonInfo.css';\n\nfunction PokemonInfo(props) {\n  const { pokemon } = props;\n  if (!pokemon.name) {\n    return (\n      <div>\n        Select an Pokemon to see more information about it...\n      </div>);\n  }\n  return (\n    <div className=\"pokemon-card\">\n      <div className=\"card-selected\">\n        <h1>{pokemon.name[0].toUpperCase() + pokemon.name.slice(1).toLowerCase()}</h1>\n        <img\n          id=\"selectedPokemon\"\n          src={ pokemon.sprites.other.dream_world.front_default }\n          alt={ pokemon.name }\n        />\n      </div>\n      <div className=\"card-selected-text\">\n        <p>{`Base experience: ${pokemon.base_experience} points`}</p>\n        <p>{`Weight: ${pokemon.weight}`}</p>\n        {pokemon.stats.map((stat) => (\n          <p key={ `${stat.name}${stat.stat.name}` }>\n            {`${stat.stat.name}: ${stat.base_stat} points`}\n          </p>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nPokemonInfo.propTypes = {\n  pokemon: PropTypes.object,\n}.isRequired;\n\nexport default PokemonInfo;\n","const getAllPokemons = async () => {\n  try {\n    const fetchPokemons = await fetch('https://pokeapi.co/api/v2/pokemon?limit=500');\n    const getPokemons = await fetchPokemons.json();\n    const { results } = getPokemons;\n    const pokemonsInfo = results.map((pokemon) => pokemon.url);\n    const pokemons = [];\n    await Promise.all(pokemonsInfo.map(async (info) => {\n      const fetchInfo = await fetch(`${info}`);\n      const allData = await fetchInfo.json();\n      pokemons.push(allData);\n    }));\n    return pokemons;\n  } catch (error) {\n    return error;\n  }\n};\n\nexport default getAllPokemons;\n","export default __webpack_public_path__ + \"static/media/loading.e61d80e8.gif\";","import React from 'react';\nimport image from '../images/loading.gif';\n\nfunction Loading() {\n  return (\n    <div>\n      <h1>Loading Pokemons...</h1>\n      <img src={ image } alt=\"pikachu\" />\n    </div>\n  );\n}\n\nexport default Loading;\n","export const setToLocalStorage = (key, element) => localStorage\n  .setItem(key, JSON.stringify(element));\n\nexport const getItemFromLocalStorage = (key) => {\n  const localLenght = localStorage.length;\n  if (localLenght < 1) return;\n  return JSON.parse(localStorage.getItem(key));\n};\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect /* useHistory */ } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { getPokemonsError,\n  getPokemonsSucess, selectPokemon } from '../actions/pokeActions';\nimport PokemonInfo from '../components/PokemonInfo';\nimport getAllPokemons from '../services/pokemonApi';\nimport Loading from '../components/Loading';\nimport { getItemFromLocalStorage } from '../store/storage';\n\nconst POKEMONS_LENGTH = 10;\n\nfunction Home(props) {\n  const { apiError, getPokemons, allPokemonsArr,\n    error, select, isLoading, selectedPokemon, isSelected } = props;\n\n  const [pokemonsOffset, setPokemonsOfSet] = useState(0);\n  const [pokemonsInScreen, setPokemonsInScreen] = useState(POKEMONS_LENGTH);\n  const [redirect, setRedirect] = useState(false);\n\n  const POKEMONS_ARR_LENGTH = allPokemonsArr.length;\n  const LIMIT_POKEMONS_SCREEN = pokemonsInScreen === POKEMONS_ARR_LENGTH;\n  // const IS_SELECTEED = selectedPokemon.name;\n\n  const pokemons = [];\n  const showingPokemons = () => {\n    for (let index = pokemonsOffset; index < pokemonsInScreen; index += 1) {\n      pokemons.push(allPokemonsArr[index]);\n    }\n    return pokemons;\n  };\n\n  useEffect(() => {\n    const load = async () => {\n      try {\n        const apiResult = await getAllPokemons();\n        const sortResult = apiResult.sort((a, b) => a.id - b.id);\n        await getPokemons(sortResult);\n      } catch (err) {\n        apiError(err);\n      }\n    };\n    load();\n    if (localStorage.myPokemon) {\n      const savedPokemon = getItemFromLocalStorage('myPokemon');\n      select(savedPokemon);\n    }\n  }, []);\n\n  function selectCurrPokemon(event) {\n    // const nextpageButton = document.getElementById('next-page');\n    // nextpageButton.classList.remove('display-off');\n    const { id } = event.target;\n    const pokemonFound = pokemons.find((pokemon) => pokemon.name === id);\n    if (selectedPokemon.name === id) return;\n    if (pokemonFound) select(pokemonFound);\n  }\n\n  const nextPokemons = () => {\n    setPokemonsOfSet(pokemonsOffset + POKEMONS_LENGTH);\n    setPokemonsInScreen(pokemonsInScreen + POKEMONS_LENGTH);\n  };\n\n  const previousPokemons = () => {\n    setPokemonsOfSet(pokemonsOffset - POKEMONS_LENGTH);\n    setPokemonsInScreen(pokemonsInScreen - POKEMONS_LENGTH);\n  };\n\n  const nextPage = () => {\n    setRedirect(true);\n  };\n\n  const recoverPokemon = () => {\n    const savedPokemon = getItemFromLocalStorage('myPokemon');\n    select(savedPokemon);\n  };\n\n  if (error) return <h2>{ error }</h2>;\n  if (isLoading) return <h2><Loading /></h2>;\n  if (redirect) return <Redirect to=\"/PokemonGame/BattlePreparation\" />;\n\n  return (\n    <div id=\"main\">\n      <h2>Welcome to Pokemon game!</h2>\n      <h3>\n        Here you will find a lot of information about each pokemon.\n        We have a list of 500 pokemons.\n      </h3>\n      <h2>To start select a pokemon...</h2>\n      {localStorage.myPokemon && !isSelected\n        ? (\n          <div id=\"recover-pokemon\">\n            <h2>Do you already have a pokemon that is in training want to keep it?</h2>\n            <button type=\"button\" onClick={ recoverPokemon }>Yes I want!</button>\n          </div>\n        )\n        : '' }\n      <div className=\"card\">\n        <PokemonInfo pokemon={ selectedPokemon } />\n      </div>\n      <button\n        type=\"button\"\n        disabled={ pokemonsOffset === 0 }\n        className=\"pokeButton\"\n        onClick={ previousPokemons }\n      >\n        See previous pokemons...\n      </button>\n      <button\n        type=\"button\"\n        disabled={ LIMIT_POKEMONS_SCREEN }\n        className=\"pokeButton\"\n        onClick={ nextPokemons }\n      >\n        See next pokemons...\n      </button>\n      <button\n        id=\"next-page\"\n        display={ 'none' && isSelected }\n        className={ !isSelected ? 'display-off' : '' }\n        onClick={ nextPage }\n        type=\"button\"\n      >\n        Prepare for battle...\n      </button>\n      <div className=\"pokemon-cards\">\n        { showingPokemons().map((pokemon) => (\n          <label key={ pokemon.name } htmlFor={ pokemon.name }>\n            <div className=\"pokeCard\">\n              <div id=\"card-text\">\n                <input\n                  className=\"input-radio pokeCard pokemons\"\n                  id={ pokemon.name }\n                  onClick={ selectCurrPokemon }\n                  name=\"selected\"\n                  type=\"radio\"\n                  value={ pokemon.name }\n                />\n                <h3>{`Click here to select ${pokemon.name}`}</h3>\n              </div>\n              <div id=\"card-image\">\n                <img\n                  src={ pokemon.sprites.front_default }\n                  alt={ pokemon.name }\n                />\n              </div>\n            </div>\n          </label>\n        )) }\n      </div>\n    </div>\n  );\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getPokemons: (payload) => dispatch(getPokemonsSucess(payload)),\n  apiError: (payload) => dispatch(getPokemonsError(payload)),\n  select: (pokemon) => dispatch(selectPokemon(pokemon)),\n});\n\nconst mapStateToProps = ({ pokeReducer:\n  { isLoading, selectedPokemon, allPokemonsArr, isSelected } }) => ({\n  isLoading,\n  selectedPokemon,\n  allPokemonsArr,\n  isSelected,\n});\n\nHome.propTypes = {\n  info: PropTypes.object,\n}.isRequired;\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PokemonInfo from '../components/PokemonInfo';\nimport { setToLocalStorage } from '../store/storage';\n\nfunction BattlePreparation() {\n  // const pokemonSelected = useSelector((pokemonSelected) => pokemonSelected.pokemonSelected);\n  const pokemonSelected = useSelector((state) => state.pokeReducer.selectedPokemon);\n  return (\n    <>\n      <Link to=\"/PokemonGame\">Voltar</Link>\n      <div>\n        <h1>Battle Preparation</h1>\n      </div>\n      <div>\n        <h1>You selected:</h1>\n        <PokemonInfo pokemon={ pokemonSelected } />\n      </div>\n      <h2>want to keep this pokemon and store your information?</h2>\n      <h3 id=\"save-to-store\" className=\"display-off\">\n        Congratulations now this pokemon is yours, take good care of it.\n      </h3>\n      <button\n        type=\"button\"\n        onClick={ () => {\n          const THREE_SECONDS = 3000;\n          const informationSave = document.getElementById('save-to-store');\n          setToLocalStorage('myPokemon', pokemonSelected);\n          informationSave.classList.remove('display-off');\n          setTimeout(() => {\n            informationSave.classList.add('display-off');\n          }, THREE_SECONDS);\n        } }\n      >\n        Yes I want!\n      </button>\n      <h1>Want to battle pokemons of which levels?</h1>\n\n    </>\n  );\n}\n\nexport default BattlePreparation;\n","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport './css/App.css';\nimport Home from './pages/Home';\nimport BattlePreparation from './pages/BattlePreparation';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/PokemonGame\" component={ Home } />\n            <Route\n              exact\n              path=\"/PokemonGame/BattlePreparation\"\n              component={ BattlePreparation }\n            />\n          </Switch>\n        </BrowserRouter>\n        <h2>Created By Felipe Flores</h2>\n        <a href=\"https://github.com/FelipeFloresWeb/\">GitHub</a>\n        <p>Datas from: https://pokeapi.co/</p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\nconst reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\n  GET_POKEMONS_SUCESS,\n  GET_POKEMONS_ERROR,\n  SELECT_POKEMON,\n} from '../actions/pokeActions';\n\nconst INITIAL_STATE = {\n  error: null,\n  isLoading: true,\n  allPokemonsArr: [],\n  isSelected: false,\n  selectedPokemon: {},\n};\n\nfunction pokeReducer(state = INITIAL_STATE, action) {\n  switch (action.type) {\n  case GET_POKEMONS_SUCESS:\n    return { ...state, isLoading: false, allPokemonsArr: action.payload };\n  case GET_POKEMONS_ERROR:\n    return { ...state, error: action.payload };\n  case SELECT_POKEMON:\n    return { ...state, isSelected: true, selectedPokemon: action.payload };\n  default:\n    return state;\n  }\n}\n\nexport default pokeReducer;\n","/* eslint-disable */\nimport { combineReducers } from 'redux';\nimport pokeReducer from './pokeReducer';\n\nconst rootReducer = combineReducers({pokeReducer});\n\nexport default rootReducer;","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers/index';\n\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\n\nexport default store;\n","/* eslint-disable */\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}